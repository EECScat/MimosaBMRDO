#
# Vivado (TM) v2015.4.2 (64-bit)
#
# project_KC705.tcl: Tcl script for re-creating project 'top'
#
# Generated by Vivado on Fri Apr 28 18:43:18 PDT 2017
# IP Build 1491208 on Wed Feb 24 03:25:39 MST 2016
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (project_KC705.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/KC705/common/tri_mode_ethernet_mac_0_sync_block.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/KC705/common/tri_mode_ethernet_mac_0_reset_sync.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/KC705/fifo/tri_mode_ethernet_mac_0_bram_tdp.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/KC705/fifo/tri_mode_ethernet_mac_0_tx_client_fifo.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/KC705/support/tri_mode_ethernet_mac_0_support_resets.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/KC705/support/tri_mode_ethernet_mac_0_support_clocking.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/KC705/fifo/tri_mode_ethernet_mac_0_rx_client_fifo.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/com5402pkg.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/bram_dp.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/whois2.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/udp_rx.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/udp2serial.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/KC705/fifo/tri_mode_ethernet_mac_0_ten_100_1g_eth_fifo.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/KC705/support/tri_mode_ethernet_mac_0_support.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/timer_4us.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/tcp_txbuf.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/tcp_tx.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/tcp_server.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/tcp_rxbufndemux2.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/serial2udp_tx.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/ping.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/packet_parsing.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/arp_cache2.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/arp.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/jtag/jtag_tap.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/i2c/i2c_master.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/global_resetter.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/ipcore_dir/KC705/clockwiz/clockwiz.xci"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/KC705/axi_lite_sm/tri_mode_ethernet_mac_0_axi_lite_sm.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/KC705/gig_eth_mac_resets.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/KC705/gig_eth_mac_fifo_block.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/ipcore_dir/KC705/fifo32to8/fifo32to8.xci"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/tcp_server/com5402.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/serial_to_parallel/sensor_deserializer.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/jtag/jtag.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/i2c/i2c_wr_bytes.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/i2c/i2c_tic.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/global_clock_reset.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/serial_to_parallel/data_mod.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/control_interface.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/gig_eth/KC705/gig_eth.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/top_KC705.vhd"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/ipcore_dir/KC705/fifo8to32/fifo8to32.xci"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/ipcore_dir/KC705/clk_switch/clk_switch.xci"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/ipcore_dir/KC705/fifo32to32/fifo32to32.xci"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/ipcore_dir/KC705/spram32x4096/spram32x4096.xci"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/ipcore_dir/KC705/tri_mode_ethernet_mac_0/tri_mode_ethernet_mac_0.xci"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/ipcore_dir/KC705/fifo36x512/fifo36x512.xci"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/pinassoc_KC705_HW-FMC-105-DEBUG.xdc"
#    "/home/ymei/Work/UltrafastImaging/MimosaBMRDO/Firmware/src/top_KC705.xdc"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

variable script_file
set script_file "project_KC705.tcl"

# Help information for this script
proc help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < [llength $::argc]} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir" { incr i; set origin_dir [lindex $::argv $i] }
      "--help"       { help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../top_KC705"]"

# Create project
create_project top ./

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [get_projects top]
set_property "board_part" "xilinx.com:kc705:part0:1.2" $obj
set_property "corecontainer.enable" "1" $obj
set_property "default_lib" "xil_defaultlib" $obj
set_property "sim.ip.auto_export_scripts" "1" $obj
set_property "simulator_language" "Mixed" $obj
set_property "target_language" "VHDL" $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/../src/gig_eth/KC705/common/tri_mode_ethernet_mac_0_sync_block.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/common/tri_mode_ethernet_mac_0_reset_sync.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/fifo/tri_mode_ethernet_mac_0_bram_tdp.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/fifo/tri_mode_ethernet_mac_0_tx_client_fifo.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/support/tri_mode_ethernet_mac_0_support_resets.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/support/tri_mode_ethernet_mac_0_support_clocking.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/fifo/tri_mode_ethernet_mac_0_rx_client_fifo.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/com5402pkg.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/bram_dp.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/whois2.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/udp_rx.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/udp2serial.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/fifo/tri_mode_ethernet_mac_0_ten_100_1g_eth_fifo.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/support/tri_mode_ethernet_mac_0_support.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/timer_4us.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/tcp_txbuf.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/tcp_tx.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/tcp_server.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/tcp_rxbufndemux2.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/serial2udp_tx.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/ping.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/packet_parsing.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/arp_cache2.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/arp.vhd"]"\
 "[file normalize "$origin_dir/../src/jtag/jtag_tap.vhd"]"\
 "[file normalize "$origin_dir/../src/i2c/i2c_master.vhd"]"\
 "[file normalize "$origin_dir/../src/global_resetter.vhd"]"\
 "[file normalize "$origin_dir/../ipcore_dir/KC705/clockwiz/clockwiz.xci"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/axi_lite_sm/tri_mode_ethernet_mac_0_axi_lite_sm.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/gig_eth_mac_resets.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/gig_eth_mac_fifo_block.vhd"]"\
 "[file normalize "$origin_dir/../ipcore_dir/KC705/fifo32to8/fifo32to8.xci"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/com5402.vhd"]"\
 "[file normalize "$origin_dir/../src/serial_to_parallel/sensor_deserializer.vhd"]"\
 "[file normalize "$origin_dir/../src/jtag/jtag.vhd"]"\
 "[file normalize "$origin_dir/../src/i2c/i2c_wr_bytes.vhd"]"\
 "[file normalize "$origin_dir/../src/i2c/i2c_tic.vhd"]"\
 "[file normalize "$origin_dir/../src/global_clock_reset.vhd"]"\
 "[file normalize "$origin_dir/../src/serial_to_parallel/data_mod.vhd"]"\
 "[file normalize "$origin_dir/../src/control_interface.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/gig_eth.vhd"]"\
 "[file normalize "$origin_dir/../src/top_KC705.vhd"]"\
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 "[file normalize "$origin_dir/../src/gig_eth/KC705/common/tri_mode_ethernet_mac_0_sync_block.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/common/tri_mode_ethernet_mac_0_reset_sync.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/fifo/tri_mode_ethernet_mac_0_bram_tdp.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/fifo/tri_mode_ethernet_mac_0_tx_client_fifo.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/support/tri_mode_ethernet_mac_0_support_resets.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/support/tri_mode_ethernet_mac_0_support_clocking.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/fifo/tri_mode_ethernet_mac_0_rx_client_fifo.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/com5402pkg.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/bram_dp.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/whois2.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/udp_rx.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/udp2serial.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/fifo/tri_mode_ethernet_mac_0_ten_100_1g_eth_fifo.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/support/tri_mode_ethernet_mac_0_support.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/timer_4us.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/tcp_txbuf.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/tcp_tx.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/tcp_server.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/tcp_rxbufndemux2.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/serial2udp_tx.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/ping.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/packet_parsing.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/arp_cache2.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/arp.vhd"]"\
 "[file normalize "$origin_dir/../src/jtag/jtag_tap.vhd"]"\
 "[file normalize "$origin_dir/../src/i2c/i2c_master.vhd"]"\
 "[file normalize "$origin_dir/../src/global_resetter.vhd"]"\
 "[file normalize "$origin_dir/../ipcore_dir/KC705/clockwiz/clockwiz.xci"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/axi_lite_sm/tri_mode_ethernet_mac_0_axi_lite_sm.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/gig_eth_mac_resets.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/gig_eth_mac_fifo_block.vhd"]"\
 "[file normalize "$origin_dir/../ipcore_dir/KC705/fifo32to8/fifo32to8.xci"]"\
 "[file normalize "$origin_dir/../src/gig_eth/tcp_server/com5402.vhd"]"\
 "[file normalize "$origin_dir/../src/serial_to_parallel/sensor_deserializer.vhd"]"\
 "[file normalize "$origin_dir/../src/jtag/jtag.vhd"]"\
 "[file normalize "$origin_dir/../src/i2c/i2c_wr_bytes.vhd"]"\
 "[file normalize "$origin_dir/../src/i2c/i2c_tic.vhd"]"\
 "[file normalize "$origin_dir/../src/global_clock_reset.vhd"]"\
 "[file normalize "$origin_dir/../src/serial_to_parallel/data_mod.vhd"]"\
 "[file normalize "$origin_dir/../src/control_interface.vhd"]"\
 "[file normalize "$origin_dir/../src/gig_eth/KC705/gig_eth.vhd"]"\
 "[file normalize "$origin_dir/../src/top_KC705.vhd"]"\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "common/tri_mode_ethernet_mac_0_sync_block.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "common/tri_mode_ethernet_mac_0_reset_sync.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "fifo/tri_mode_ethernet_mac_0_bram_tdp.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "fifo/tri_mode_ethernet_mac_0_tx_client_fifo.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "support/tri_mode_ethernet_mac_0_support_resets.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "support/tri_mode_ethernet_mac_0_support_clocking.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "fifo/tri_mode_ethernet_mac_0_rx_client_fifo.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/com5402pkg.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/bram_dp.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/whois2.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/udp_rx.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/udp2serial.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "fifo/tri_mode_ethernet_mac_0_ten_100_1g_eth_fifo.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "support/tri_mode_ethernet_mac_0_support.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/timer_4us.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/tcp_txbuf.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/tcp_tx.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/tcp_server.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/tcp_rxbufndemux2.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/serial2udp_tx.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/ping.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/packet_parsing.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/arp_cache2.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/arp.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "jtag/jtag_tap.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "i2c/i2c_master.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/global_resetter.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "axi_lite_sm/tri_mode_ethernet_mac_0_axi_lite_sm.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "KC705/gig_eth_mac_resets.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "KC705/gig_eth_mac_fifo_block.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "tcp_server/com5402.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "serial_to_parallel/sensor_deserializer.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "jtag/jtag.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "i2c/i2c_wr_bytes.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "i2c/i2c_tic.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/global_clock_reset.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "serial_to_parallel/data_mod.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/control_interface.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "KC705/gig_eth.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/top_KC705.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property "top" "top_KC705" $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/../ipcore_dir/KC705/fifo8to32/fifo8to32.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 "[file normalize "$origin_dir/../ipcore_dir/KC705/fifo8to32/fifo8to32.xci"]"\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/../ipcore_dir/KC705/clk_switch/clk_switch.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 "[file normalize "$origin_dir/../ipcore_dir/KC705/clk_switch/clk_switch.xci"]"\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/../ipcore_dir/KC705/fifo32to32/fifo32to32.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 "[file normalize "$origin_dir/../ipcore_dir/KC705/fifo32to32/fifo32to32.xci"]"\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/../ipcore_dir/KC705/spram32x4096/spram32x4096.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 "[file normalize "$origin_dir/../ipcore_dir/KC705/spram32x4096/spram32x4096.xci"]"\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/../ipcore_dir/KC705/tri_mode_ethernet_mac_0/tri_mode_ethernet_mac_0.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 "[file normalize "$origin_dir/../ipcore_dir/KC705/tri_mode_ethernet_mac_0/tri_mode_ethernet_mac_0.xci"]"\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/../ipcore_dir/KC705/fifo36x512/fifo36x512.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 "[file normalize "$origin_dir/../ipcore_dir/KC705/fifo36x512/fifo36x512.xci"]"\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../src/pinassoc_KC705_HW-FMC-105-DEBUG.xdc"]"
set file_imported [import_files -fileset constrs_1 $file]
set file "src/pinassoc_KC705_HW-FMC-105-DEBUG.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../src/top_KC705.xdc"]"
set file_imported [import_files -fileset constrs_1 $file]
set file "src/top_KC705.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property "top" "top_KC705" $obj
set_property "xelab.nosort" "1" $obj
set_property "xelab.unifast" "" $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
  create_run -name synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2015} -strategy "Vivado Synthesis Defaults" -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2015" [get_runs synth_1]
}
set obj [get_runs synth_1]

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
  create_run -name impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2015} -strategy "Vivado Implementation Defaults" -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2015" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property "steps.write_bitstream.args.readback_file" "0" $obj
set_property "steps.write_bitstream.args.verbose" "0" $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:top"
